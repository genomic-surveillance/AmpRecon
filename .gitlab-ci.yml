stages:
  - test
  - tag_on_merges

default:
  image:
    name: gitlab-registry.internal.sanger.ac.uk/isg/gitlab-ci-docker-docker

.job_template: &set_environment
  tags:
    - openstack-autoscale-theta-docker-in-docker
  before_script:
    - "docker login -u \"${CI_REGISTRY_USER}\" -p \"${CI_REGISTRY_PASSWORD}\" \"${CI_REGISTRY}\""
    - mkdir -p /etc/docker
    - echo '{"bip":"192.168.5.3/24","registry-mirrors":["https://docker-hub-mirror.internal.sanger.ac.uk:5000"],"default-address-pools":[{"base":"192.168.4.0/16","size":24}]}' > /etc/docker/daemon.json
    - dockerd > /var/log/dockerd.log 2>&1 &
    - apt-get update -y
    - apt-get install -y sudo openjdk-11-jdk wget curl
    - wget -qO- https://get.nextflow.io | bash
    - sudo mv nextflow /usr/bin
    - sleep 10


test_nextflow_modules:
  stage: test
  <<: *set_environment
  script:
   - tests/run_samtoolsbam2cram.sh
   - tests/run_bwa_alignment.sh

run python unit tests:
  stage: test
  only:
    - branches
  <<: *set_environment
  script:
    - export DOCKER_IMAGE=gitlab-registry.internal.sanger.ac.uk/malariagen1/ampseq-pipeline/python-tasks:0.2
    - echo "Running python unit tests in image ${DOCKER_IMAGE}..."
    - docker run -v ${PWD}:/ampseq-pipeline "${DOCKER_IMAGE}" bash -c "pip3 install coverage; cd /ampseq-pipeline/tests; ./run_ci_python_test.sh"
  coverage: /^TOTAL.+?(\d+\%)$/
  artifacts:
    when: always
    paths:
      - tests/htmlcov

tag code on merge to develop:
  stage: tag_on_merges
  only:
    - develop
  tags:
    - openstack-autoscale-theta
  script:
    - git config --local user.name "${GITLAB_USER_ID}"
    - git config --local user.email "${GITLAB_USER_EMAIL}"
    - export UUID=$(cat /proc/sys/kernel/random/uuid)
    - git checkout -b $UUID
    - export TIMESTAMP_VERSION=$(date -u '+%Y.%m.%d.%H.%M.%S.%3N')
    - echo "Tagging with tag ${TIMESTAMP_VERSION}"
    - git tag -a $TIMESTAMP_VERSION -m "Version $TIMESTAMP_VERSION"
    - git push https://${AMPLICON_CI_TOKEN_NAME}:${AMPLICON_CI_TOKEN_VALUE}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git $TIMESTAMP_VERSION



FROM ubuntu:18.04 AS spython-base
LABEL Maintainer Thomas Maddison
LABEL Build 1.0
LABEL Samtools 1.8
LABEL BCFTools 1.8
LABEL BWA 0.7.17
LABEL Python 3.6.5
LABEL Biobambam2 2.0.79
LABEL Bambi 0.11.1
LABEL Staden 1.14.9
ENV PATH=/opt/conda/bin:$PATH
ENV LD_LIBRARY_PATH=/usr/local/lib
ENV LIBRARY_PATH=/usr/lib/x86_64-linux-gnu/
ENV C_INCLUDE_PATH=/usr/include/
ENV PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig/
ENV LC_ALL=C
ENV LC_NUMERIC=en_GB.UTF-8
ENV PATH="/opt/miniconda/bin:$PATH"
ENV PATH=/opt/conda/envs/biobambam-2.0.79/bin:$PATH
RUN DEBIAN_FRONTEND=noninteractive
RUN BIOBAMBAM2_VERSION=2.0.79-0
RUN HTSLIB_VERSION=1.8 # also for samtools and bcftools
RUN BAMBI_VERSION=0.11.1
RUN BWA_VERSION=0.7.17
RUN STADEN_VERSION=1.14.9
RUN STADEN_TAG=io_lib-1-14-9
RUN apt update
RUN DEBIAN_FRONTEND=noninteractive \
apt install -y wget git zlib1g zlib1g-dev libbz2-dev libncurses5-dev \
curl unzip liblzma-dev libcurl4-openssl-dev \
software-properties-common apt-transport-https \
libssl-dev gcc wget \
make perl bzip2 gnuplot ca-certificates gawk python3 \
git libtool pkg-config libpython3-dev libxml2-dev \
bzip2 libncurses-dev checkinstall autoconf libgsl-dev \
libgd-dev nano python3-pip #python-dev libgd2-xpm-dev
RUN cd /opt
RUN rm -fr miniconda
RUN wget https://repo.continuum.io/miniconda/Miniconda3-4.7.12-Linux-x86_64.sh -O miniconda.sh
RUN bash miniconda.sh -b -p /opt/miniconda
RUN export PATH="/opt/miniconda/bin:$PATH"
RUN conda config --add channels bioconda
RUN conda install -y biobambam=${BIOBAMBAM2_VERSION}
RUN mkdir /app/
RUN cd /app/
RUN pip install --upgrade pip
RUN pip install pandas
RUN wget -O "htslib.tar.gz" https://github.com/samtools/htslib/archive/${HTSLIB_VERSION}.tar.gz
RUN tar -xf htslib.tar.gz
RUN cd htslib-${HTSLIB_VERSION}
RUN autoheader
RUN autoreconf -i  # Build the configure script and install files it uses
RUN ./configure --prefix=/usr/local/   # Optional but recommended, for choosing extra functionality
RUN make
RUN make install
RUN cd /app/
RUN git clone https://github.com/wtsi-npg/bambi.git
RUN cd bambi/
RUN git checkout ${BAMBI_VERSION}
RUN autoreconf -i
RUN ./configure
RUN sed -i 's|AM_CPPFLAGS =.*|AM_CPPFLAGS = -I$(top_srcdir)/src $(HTSLIB_CPPFLAGS) -I/usr/local/include/htslib/ -std=gnu99 -Werror|g' Makefile.am
RUN sed -i 's|AM_LDFLAGS =.*|AM_LDFLAGS = -rdynamic $(HTSLIB_LDFLAGS) -lgd -lz -lhts|g' Makefile.am
RUN make
RUN make install
RUN cd /app/
RUN wget -O "bcftools.tar.gz" https://github.com/samtools/bcftools/archive/${HTSLIB_VERSION}.tar.gz
RUN tar xf bcftools.tar.gz
RUN cd bcftools-${HTSLIB_VERSION}
RUN autoheader
RUN autoconf
RUN ./configure --enable-libgsl
RUN make
RUN mv bcftools /usr/local/bin
RUN cd /app/
RUN wget -O "samtools.tar.gz" https://github.com/samtools/samtools/archive/${HTSLIB_VERSION}.tar.gz
RUN tar xf samtools.tar.gz
RUN cd samtools-${HTSLIB_VERSION}
RUN autoheader
RUN autoconf -Wno-syntax
RUN ./configure --prefix /usr/local
RUN make
RUN make install
RUN cd /app/
RUN wget -O "bwa-${BWA_VERSION}.tar.gz" https://github.com/lh3/bwa/archive/v${BWA_VERSION}.tar.gz
RUN tar xf bwa-${BWA_VERSION}.tar.gz
RUN cd bwa-${BWA_VERSION}
RUN make &&  mv bwa /usr/local/bin
RUN cd ..
RUN cd /tmp
RUN wget https://github.com/jkbonfield/io_lib/releases/download/${STADEN_TAG}/io_lib-${STADEN_VERSION}.tar.gz
RUN tar -xvzf io_lib-${STADEN_VERSION}.tar.gz \
&& rm /tmp/io_lib-${STADEN_VERSION}.tar.gz
RUN cd /tmp/io_lib-${STADEN_VERSION}
RUN ./configure
RUN make && make install
RUN cd /app/
RUN conda clean -y --all
RUN rm -fr htslib* samtools* bcf* bwa* *.tar.gz /opt/miniconda.sh /tmp/io_lib-${STADEN_VERSION}
RUN apt autoremove --purge
RUN apt clean
RUN echo "bwa -h" >> /tests.sh
RUN echo "# bambi" >> /tests.sh
RUN echo "bambi select" >> /tests.sh
RUN echo "# samtools" >> /tests.sh
RUN echo "samtools" >> /tests.sh
RUN echo "# standen" >> /tests.sh
RUN echo "scramble -h" >> /tests.sh
RUN echo "# bcftools" >> /tests.sh
RUN echo "bcftools --version" >> /tests.sh
RUN echo "# biobambam2 check" >> /tests.sh
RUN echo "bamadapterclip -h" >> /tests.sh
RUN echo "bamadapterfind -h" >> /tests.sh
RUN echo "bamtofastq -h" >> /tests.sh
RUN echo "bamsort -h" >> /tests.sh
RUN echo "# python3" >> /tests.sh
RUN echo "python3 --version" >> /tests.sh
RUN echo "python3 -c "import pandas"" >> /tests.sh
RUN chmod u+x /tests.sh
HEALTHCHECK /bin/bash /tests.sh

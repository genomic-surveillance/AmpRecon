
profiles {

  standard {
    singularity {
      enabled = true
    }
  }

  sanger_default {

        docker {
            enabled = false
        }

        singularity {
            enabled = true
            autoMounts = true
            cacheDir = "$PWD"
            runOptions = "--bind /lustre,/nfs,/software"
        }

        process {
            cpus = 1
            memory = "8GB"
            errorStrategy = {task.attempt <= 1 ? "retry" : "terminate"}
            maxRetries = 1

            // This is needed to make resume use the cache for the decode step
            withName: decode_multiplexed_bam  {
                cache = "deep"
            }
        }

        executor {
            name = "local"
        }
    }
    // Basic configuration for an LSF environment at Sanger
 sanger_lsf {
        docker {
            enabled = false
        }

        singularity {
            enabled = true
            autoMounts = true
            cacheDir = "./"
            runOptions = "--bind /lustre,/nfs,/software"
        }

        process {
            memory = "8GB"
            queue = "normal"
            errorStrategy = {task.attempt <= 3 ? 'retry' : 'terminate'}
            maxRetries = 3
        }

        executor {
            name = "lsf"
            perJobMemLimit = true
            // Maximum number of jobs to spawn at once - adjust as necessary
            // queueSize = params.queue_size
            jobName = { "ampseq_nf_pipeline - $task.name - $task.hash" }
            pollInterval = "5 sec"
        }
    }

  sanger_tower {

	process.container="gitlab-registry.internal.sanger.ac.uk/malariagen1/amplicon-legacy/amplicon-pipeline-dependencies:0.9"
	
	docker { 
	    enabled = false
	}
	
	singularity {
	    enabled = true
	    autoMounts = true
	    runOptions = "--bind /lustre,/nfs,/software"
	}
	
	process {
	    cpus=1
	    memory="8GB"
	    errorStrategy = {task.attempt <= 2 ? "retry" : "terminate"}
	    maxRetries = 5

        withName: decode {
                cache = "deep"
            }
        }

        executor {
            name = "local"
        }
  }
}
